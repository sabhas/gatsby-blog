{"componentChunkName":"component---src-templates-tag-post-tsx","path":"/tag/nodejs/","result":{"data":{"allMarkdownRemark":{"totalCount":1,"edges":[{"node":{"id":"d121e180-62e9-53a9-a99f-69b8532a9319","frontmatter":{"title":"Understanding event loop in node Js","author":"Sabir Hassan","date":"Mar 13th 2024","tags":["nodeJS","event loop","javascript"],"image_alt":"HTTP","image":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/gatsby-blog/static/65364f906e8385d8fd30d61eabc04178/0792a/event-loop.png","srcSet":"/gatsby-blog/static/65364f906e8385d8fd30d61eabc04178/1223d/event-loop.png 690w,\n/gatsby-blog/static/65364f906e8385d8fd30d61eabc04178/f015a/event-loop.png 1380w,\n/gatsby-blog/static/65364f906e8385d8fd30d61eabc04178/0792a/event-loop.png 2759w","sizes":"(min-width: 2759px) 2759px, 100vw"},"sources":[{"srcSet":"/gatsby-blog/static/65364f906e8385d8fd30d61eabc04178/2814f/event-loop.webp 690w,\n/gatsby-blog/static/65364f906e8385d8fd30d61eabc04178/2c961/event-loop.webp 1380w,\n/gatsby-blog/static/65364f906e8385d8fd30d61eabc04178/09c9e/event-loop.webp 2759w","type":"image/webp","sizes":"(min-width: 2759px) 2759px, 100vw"}]},"width":2759,"height":1424}}}},"fields":{"slug":"understanding-event-loop-in-node-js"},"excerpt":"The Node.js event loop functions as a semi-infinite loop, running continuously until all pending asynchronous tasks are completed. When youâ€¦"}}]}},"pageContext":{"tag":"nodeJS"}},"staticQueryHashes":["1808055342","3649515864"],"slicesMap":{}}