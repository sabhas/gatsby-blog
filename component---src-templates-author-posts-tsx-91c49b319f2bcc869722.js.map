{"version":3,"file":"component---src-templates-author-posts-tsx-91c49b319f2bcc869722.js","mappings":"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","sources":["webpack://my-blog/./src/components/post.tsx","webpack://my-blog/./src/templates/authorPosts.tsx","webpack://my-blog/./src/utils/authors.ts","webpack://my-blog/./src/utils/helper.ts","webpack://my-blog/./node_modules/reactstrap/esm/Badge.js","webpack://my-blog/./node_modules/reactstrap/esm/CardSubtitle.js"],"sourcesContent":["import React from \"react\"\nimport {\n  Badge,\n  Card,\n  CardTitle,\n  CardText,\n  CardSubtitle,\n  CardBody,\n} from \"reactstrap\"\nimport { Link } from \"gatsby\"\nimport { GatsbyImage, IGatsbyImageData } from \"gatsby-plugin-image\"\n\nimport { slugify } from \"../utils\"\n\ntype PostProps = {\n  title: string\n  author: string\n  slug: string\n  date: string\n  tags: string[]\n  body: string\n  image?: IGatsbyImageData\n  imageAlt: string\n}\n\nconst Post = ({\n  title,\n  author,\n  slug,\n  date,\n  tags,\n  body,\n  image,\n  imageAlt,\n}: PostProps) => (\n  <Card>\n    {image && (\n      <Link to={`/${slug}`}>\n        <GatsbyImage image={image} alt={imageAlt} />\n      </Link>\n    )}\n\n    <CardBody>\n      <CardTitle>\n        <Link to={slug}>{title}</Link>\n      </CardTitle>\n      <CardSubtitle>\n        <span className=\"text-info\">{date}</span> by{\" \"}\n        <Link to={`/author/${slugify(author)}`}>\n          <span className=\"text-info\">{author}</span>\n        </Link>\n      </CardSubtitle>\n      <CardText>{body}</CardText>\n      <ul className=\"post-tags\">\n        {tags.map((tag) => (\n          <li key={tag}>\n            <Link to={`/tag/${slugify(tag)}`}>\n              <Badge color=\"primary\" className=\"text-uppercase\">\n                {tag}\n              </Badge>\n            </Link>\n          </li>\n        ))}\n      </ul>\n      <Link\n        to={`/${slug}`}\n        className=\"btn btn-outline-primary float-right text-uppercase\"\n      >\n        Read more\n      </Link>\n    </CardBody>\n  </Card>\n)\n\nexport default Post\n","import React from \"react\"\nimport Layout from \"../components/layout\"\nimport Post from \"../components/post\"\nimport { graphql } from \"gatsby\"\nimport { authors } from \"../utils/authors\"\n\nimport { IGatsbyImageData, getImage } from \"gatsby-plugin-image\"\n\ntype Data = {\n  allMarkdownRemark: {\n    totalCount: number\n    edges: [\n      {\n        node: {\n          id: number\n          frontmatter: {\n            title: string\n            date: string\n            author: string\n            tags: string[]\n            image_alt: string\n            image: IGatsbyImageData\n          }\n          fields: {\n            slug: string\n          }\n          excerpt: string\n        }\n      }\n    ]\n  }\n  file: IGatsbyImageData\n}\n\ntype Props = {\n  data: Data\n  pageContext: {\n    authorName: string\n    imageUrl: string\n  }\n}\n\nconst authorPosts = ({ data, pageContext }: Props) => {\n  const { totalCount } = data.allMarkdownRemark\n  const author = authors.find((x) => x.name === pageContext.authorName)\n  const pageHeader = `${totalCount} Posts by: ${pageContext.authorName}`\n\n  return (\n    <Layout\n      pageTitle={pageHeader}\n      author={author}\n      authorImage={getImage(data.file)}\n    >\n      {data.allMarkdownRemark.edges.map(({ node }) => (\n        <Post\n          key={node.id}\n          title={node.frontmatter.title}\n          slug={node.fields.slug}\n          author={node.frontmatter.author}\n          tags={node.frontmatter.tags}\n          body={node.excerpt}\n          date={node.frontmatter.date}\n          image={getImage(node.frontmatter.image)}\n          imageAlt={node.frontmatter.image_alt}\n        />\n      ))}\n    </Layout>\n  )\n}\n\nexport const authorPostsQuery = graphql`\n  query authorPostsQuery($authorName: String!, $imageUrl: String!) {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { author: { eq: $authorName } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"MMMM Do YYYY\")\n            author\n            tags\n            image_alt\n            image {\n              childImageSharp {\n                gatsbyImageData\n              }\n            }\n          }\n          fields {\n            slug\n          }\n          excerpt\n        }\n      }\n    }\n    file(relativePath: { eq: $imageUrl }) {\n      childImageSharp {\n        gatsbyImageData\n      }\n    }\n  }\n`\n\nexport default authorPosts\n","import { Author } from './types'\n\nexport const authors: Author[] = [\n  {\n    name: 'Sabir Hassan',\n    imageUrl: 'sabir.jpg',\n    bio: 'Sabir is a Full Stack (Node.js and React.js) developer with industrial experience of more than 3 years',\n    github: 'https://github.com/sabhas',\n    twitter: 'https://twitter.com/sabirbk',\n    instagram: 'https://www.instagram.com/',\n    google: 'https://www.google.com/',\n    linkedin: 'https://www.linkedin.com/in/sabir-hassan-8b1484140/'\n  }\n]\n","export const slugify = (text: string) =>\n  text\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\") // Replace spaces with -\n    .replace(/[^\\w-]+/g, \"\") // Remove all non-word chars\n    .replace(/--+/g, \"-\") // Replace multiple - with single -\n    .replace(/^-+/, \"\") // Trim - from start of text\n    .replace(/-+$/, \"\") // Trim - from end of text\n","var _excluded = [\"className\", \"cssModule\", \"color\", \"innerRef\", \"pill\", \"tag\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  /** Pass children so this component can wrap the child elements */\n  children: PropTypes.node,\n  /** Add custom class */\n  className: PropTypes.string,\n  /** Change background color of Badge */\n  color: PropTypes.string,\n  /** Change existing className with a new className */\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  /** Add rounded corners to the Badge */\n  pill: PropTypes.bool,\n  /** Set a custom element for this component */\n  tag: tagPropType\n};\nfunction Badge(props) {\n  var className = props.className,\n    cssModule = props.cssModule,\n    _props$color = props.color,\n    color = _props$color === void 0 ? 'secondary' : _props$color,\n    innerRef = props.innerRef,\n    _props$pill = props.pill,\n    pill = _props$pill === void 0 ? false : _props$pill,\n    _props$tag = props.tag,\n    Tag = _props$tag === void 0 ? 'span' : _props$tag,\n    attributes = _objectWithoutProperties(props, _excluded);\n  var classes = mapToCssModules(classNames(className, 'badge', 'bg-' + color, pill ? 'rounded-pill' : false), cssModule);\n  if (attributes.href && Tag === 'span') {\n    Tag = 'a';\n  }\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n}\nBadge.propTypes = propTypes;\nexport default Badge;","var _excluded = [\"className\", \"cssModule\", \"tag\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  /** Add custom class */\n  className: PropTypes.string,\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes.object,\n  /** Set a custom element for this component */\n  tag: tagPropType\n};\nfunction CardSubtitle(props) {\n  var className = props.className,\n    cssModule = props.cssModule,\n    _props$tag = props.tag,\n    Tag = _props$tag === void 0 ? 'div' : _props$tag,\n    attributes = _objectWithoutProperties(props, _excluded);\n  var classes = mapToCssModules(classNames(className, 'card-subtitle'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n}\nCardSubtitle.propTypes = propTypes;\nexport default CardSubtitle;"],"names":["_ref","title","author","slug","date","tags","body","image","imageAlt","React","Card","Link","to","GatsbyImage","alt","CardBody","CardTitle","CardSubtitle","className","slugify","CardText","map","tag","key","Badge","color","data","pageContext","totalCount","allMarkdownRemark","authors","find","x","name","authorName","pageHeader","Layout","pageTitle","authorImage","getImage","file","edges","_ref2","node","Post","id","frontmatter","fields","excerpt","image_alt","imageUrl","bio","github","twitter","instagram","google","linkedin","text","toLowerCase","replace","_excluded","_extends","Object","assign","bind","target","i","arguments","length","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","propTypes","children","cssModule","innerRef","pill","props","_props$color","_props$pill","_props$tag","Tag","attributes","classes","href","ref"],"sourceRoot":""}